// 3. 문

// 3.1 조건문
// 3.1.1 if
// if문은 자바스크립트가 조건에 따라 문을 실행할 수 있게 하는 기본적인 제어문이다.

if (expresion) statement;

// 첫 번째로 위와 같은 형태에서는 expression(표현식)을 평가한다. 결괏값이 true 같은 값이면 statement(문)을/를 실행한다.
// 결괏값이 false 같은 값이면 statement를 실행하지 않는다.

// 3.1.2 else if
// if/else 문은 표현식을 평가하고 그 결과에 따라 두 코드 중 하나를 실행한다. 하지만 선택지가 여럿이라면 어떻게 해야할까?
// else if 문이 그런 방법 중 하나이다.

if (n === 1) {
    // 코드 블록 #1을 실행한다.
} else if (n === 2) {
    // 코드 블록 #2를 실행한다.
} else if (n === 3) {
    // 코드 블록 #3을 실행한다.
} else {
    // 전부 실패하면 블록 #4를 실행한다.
}

// 3.1.3 switch
// if 문은 프로그램 실행 흐름에 분기점을 만들고, else if를 써서 분기점을 여럿 만들 수 있다.
// 하지만 모든 분기점이 같은 표현식의 값에 좌우된다면 else if가 최선의 선택이 아니다.

switch (n) {
    case 1:
        // 코드 블록 #1을 실행한다.
        break;
    case 2:
        // 코드 블록 #2를 실행한다.
        break;
    case 3:
        // 코드 블록 #3을 실행한다.
        break;
    default:
        // 코드 블록 #4를 실행한다.
        break;
}

// break 문은 인터프리터가 switch 문의 끝으로 빠져나가서 이어지는 문을 실행하게 하는 명령이다.

function convert(x) {
    switch (typeof x) {
        case 'number': // 숫자를 16진수로 변환한다.
            return x.toString(16);
        case 'string': // 문자열을 따옴표로 감싸 반환한다.
            return '"' + x + '"';
        default: // 다른 타입은 일반적인 방법으로 변환한다.
            return String(x);
    }
}

// switch 문은 switch 키워드 다음에 있는 표현식을 가장 먼저 평가하고, 그 다음에는 일치하는 값을 찾을 때까지 case 표현식을 순서대로 평가한다.
// 일치하는 케이스를 찾을 때는 동등 연산자 == 가 아니라 일치 연산자 === 를 사용하므로 표현식은 반드시 타입변환을 거치지 않고 일치해야한다.
